#!/usr/bin/python
# virustotal.com/en/documentation/public-api/

import requests
import sys
import getopt
import os
import datetime

apiKey ="81f543ae98a2d6480e65bac29396a1914ebe45cb71b63014a17d8f2eb11f44a6"
parameters = {'apikey':apiKey}


# make a post request and upload the file to be scanned to VirusTotal
def sendFileRequest(fileNameIn):
    if os.path.isfile(fileNameIn) == False:
        print("error, no such file: %s" % fileNameIn)
        sys.exit(2)

    filesIn = {'file': (fileNameIn, open(fileNameIn, 'rb'))}

    print("Checking VirusTotal for file: %s..." % fileNameIn)

    response = requests.post('https://www.virustotal.com/vtapi/v2/file/scan', files=filesIn, params=parameters)

    if response.status_code == 200:
        return response.json()
    if response.status_code == 204:
        print("API request limit exceeded, please wait up to 1 minute and retry")
        sys.exit(2)
    else:
        print("Problem contacting VirusTotal - %d" % response.status_code)
        sys.exit(2)


# send a URL to VirusTotal to check for known threats
def sendUrlRequest(urlIn):
    # this is a god-awful test for URL format
    urlParts = {"https://","."}

    # add the url to parameters
    parameters["url"] = urlIn

    if all(part in urlIn for part in urlParts):
        response = requests.post("https://www.virustotal.com/vtapi/v2/url/scan", data=parameters)
    else:
        print("Error, incorrect URL format")
        sys.exit(2)

    if response.status_code == 200:
        return response.json()
    if response.status_code == 204:
        print("API request limit exceeded, please wait up to 1 minute and retry")
        sys.exit(2)
    else:
        print("Problem contacting VirusTotal - %d" % response.status_code)
        sys.exit(2)


# make a get request with the 'resource' provided by the initial upload
# to retrieve the results of the scan
def retrieveScanReport(resourceIn, mode):
    parameters["resource"] = resourceIn
    headers = {
            "Accept-Encoding":"gzip, deflate",
            "User-Agent":"gzip, MalwareCheck"
            }

    print("Checking for report...")

    if mode == "file":
        response = requests.get("https://www.virustotal.com/vtapi/v2/file/report", params=parameters, headers=headers)
    elif mode == "url":
        del parameters["url"] #remove the added url parameter
        response = requests.post("https://www.virustotal.com/vtapi/v2/url/report", params=parameters, headers=headers)

    if response.status_code == 200:
        return response.json()
    if response.status_code == 204:
        print("API request limit exceeded, please wait up to 1 minute and retry")
        sys.exit(2)
    else:
        print("Problem contacting VirusTotal - %d" % response.status_code)
        sys.exit(2)


# take in the report and format the output for the user
def printReport(responseIn):
    result = ""

    if u'scans' in responseIn:
        for scanLine, scanVals in responseIn[u'scans'].iteritems():
            if scanVals[u'detected'] == True:
                result = result + scanLine + ":\n\t" + scanVals[u'update'] + " | " + scanVals[u'result'] + "\n"
    else:
        result = "No information returned.  Check URL/File"   


    return result


# pass in the relevent args like a boss
def main(argv):
    usage = "Usage:\tMalwareCheck -i <inputFileName> [-o <outputFileName>]\n\tMalwareCheck -u <url target> [-o <outputFileName>]"
    writeToFile = None
    mode = ""

    # get the given arguments to determine behaviour
    try:
        opts, args = getopt.getopt(argv,"hi:u:o:",[])
    except getopt.GetoptError:
        print(usage)
        sys.exit(2)


    # people need to know how it works right?
    for opt,arg in opts:
        if opt == "-h":
            print(usage)
            sys.exit(2)
        elif opt == "-i":
            fileName = arg
            res = sendFileRequest(fileName)
            mode = "file"
        elif opt == "-u":
            uri = arg
            res = sendUrlRequest(uri)
            mode = "url"
        elif opt == "-o":
            if len(arg) == 0:
                print("No valid filename given")
                print(usage)
                sys.exit(2)
            else:
                writeToFile=arg
        else:
            print(usage)
            sys.exit(2)


    # we have the response to the file upload, so lets update user on what's happening
    response_code = res[u'response_code']
    if response_code == 0:
        print("Item not present in VirusTotal dataset")
        sys.exit(2)
    elif response_code == 1:
        print("Queued for scanning...")
    else:
        print(res[u'verbose_msg'])
        sys.exit(2)


    # grab the relevant info from the response dict
    if mode == "file":
        resource = res[u'resource']
    if mode == "url":
        resource = res[u'url']
    else:
        print("HOW DID THIS HAPPEN")
        sys.exit(2)


    # attempt to retrieve scan results
    res = retrieveScanReport(resource, mode)
    

    # obtain the results contained within the report
    output = printReport(res)


    # deal with output
    if writeToFile is not None:
        if os.path.isfile(writeToFile) == False:
            f = open(writeToFile, "w+")
        else:
            print("file %s already exists, creating new..." % writeToFile)
            now = datetime.datetime.now()
            datestamp = now.strftime("%Y%m%d%H%M%S")
            fName = "MalwareCheck_" + datestamp + ".txt"
            f = open(fName, "w+")
            writeToFile = fName

        f.write(output)
        f.close
        print("output file %s created!" % writeToFile)
    else:
        print("\n------------------------------------------------------\n")
        if len(output) == 0:
            print("No matches found!")
        else:
            print(output)



if __name__ == "__main__":
    main(sys.argv[1:])
